Widget.types.news_frontend_config = {
	prepare: function() {
		var _this = this;
		this._element.append(Widget.parseHTML('{{includeTemplate=config}}'));

		var config = this.getConfigData() || {};

		//Elements
		this.mode_dropdown = this._element.find('select[name=display_mode]');
		this.news_type_dropdown = this._element.find('select[name=news_type\\[\\]]');
		this.limit_dropdown = this._element.find('select[name=limit]');
		this.result_list = this._element.find('ol.ui-editable-items-list');

		this._element.on('change', ':input', this.update_preview.bind(this));

		//Set options
		var finish = [];
		this.options(function(data) {
			this.mode_dropdown.populate(data.display_options, config.display_mode);
			this.news_type_dropdown.populate(data.news_type_options, config.news_type);
			this.limit_dropdown.populate(data.limit_options, config.limit || "__all");
		}.deferred(finish));

		jQuery.when.apply(jQuery, finish).then(function() {
			this.update_preview();
		}.bind(this));

		//Init preview stuff
		var detail_widget;
		Widget.create('news_detail', function(widget) {
			_this.detail_widget = widget;
			widget.save_callback = _this.update_preview.bind(_this);
		});
		this.result_list.delegate('li', 'click', function() {
			var id = jQuery(this).data('id');
			_this.detail_widget.setNoteId(id);
			_this.detail_widget.fill_data();
			_this.detail_widget.open();
		});
	},

	update_preview: function() {
		var result_list = this.result_list;
		result_list.empty();
		var data = this.save();
		this.listNews(data, function(news) {
			jQuery.each(news, function(i, news) {
				result_list.append(jQuery('<li/>').text(news.headline).attr('title', "{{writeString=wns.edit_entry}}").addClass('preview_edit').data('id', news.id));
			});
		});
	},

	save: function() {
		return this._element.serializeArrayKV();
	},

	additional_buttons: [
		{
			text: '{{writeString=news.do_admin}}',
			icon: 'wrench',
			action: jQuery.openLink.bind(window, "{{writeLink=news;manager=AdminManager}}")
		}
	]
};
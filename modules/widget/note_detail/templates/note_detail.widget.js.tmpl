Widget.types.note_detail = {
	initialize: function() {
		var _this = this;
		this.content = jQuery.parseHTML("{{includeTemplate=edit}}");
		this.image_area = this.content.find('div.image_area').hide();
		this.note_type = this.content.find('select[name="note_type_id"]');
		this.note_type.change(function() {
			if(_this.settings.blackboard_note_type_id !== null 
				&& (jQuery(this).val() === _this.settings.blackboard_note_type_id)) {
				_this.image_area.show();
			} else {
				_this.image_area.hide();
			}
		});
		this.uploader = Widget.create('file_upload');
		this.note_body = this.content.find('div.note_body');
		
		
		Widget.create('detail', function(widget) {
			this.detail_widget = widget.set_instance(this);
			jQuery.extend(widget.settings, {
				title: "{{writeString=wns.note.create}}",
				width: 830
			});

			this.content.find("select[name='note_type_id']").prepareWidget(function(note_type_input_widget) {
				note_type_input_widget.settings.initial_selection = _this.settings.initial_type_id;
				note_type_input_widget.settings.disabled = !!_this.settings.predefined_note_type_id;
			}, function(note_type_input_widget) {
				if(_this.settings.predefined_note_type_id) { 
					note_type_input_widget._element.val(_this.settings.predefined_note_type_id);
				}
			});
			this.content.find("input[name^='date_']").datepicker({
				dateFormat: 'dd.mm.yy'
			});
						// note image		
			var image_area = _this.content.find('.image_area');
			image_area.find('.remove').click(function() {
				_this.image_id = null;
			});
			_this.uploader.allow_drag_to(image_area, null, function(target, file) {
				if(file.type.indexOf('image/') !== 0) {
					Widget.notifyUser('alert', 'Muss ein Bild sein (Datei vom Typ «JPG», «PNG»)');
					return false;
				}
				return {document_kind: 'image', document_id: _this.image_id, document_category_id: _this.settings.note_image_category_id, callback: _this.upload_success.bind(_this), error: _this.upload_error.bind(_this)};
			}, true);
			
			var image_id = null;
			Object.defineProperty(_this, 'image_id', {
				get: function() {
					return image_id;
				},
				set: function(note_image) {
					image_id = note_image;
					var remove_link = image_area.find('.remove');
					if(image_id) {
						remove_link.show();
						Widget.callStatic('document_detail', 'documentPreview', image_id, 180, function(html) {
							image_area.find('.note_image').html(html);
						});
					} else {
						image_area.find('.note_image').empty();
						remove_link.hide();
					}
				}
			});

			if(this.auto_open) {
				this.open();
			}
		}.bind(_this));
	
		_this.handle('saving', function(event, data) {
			data.image_id = _this.image_id;
			data.body = _this.note_body_editor.get_data();
		}.bind(_this));
	},
	
	open: function() {
		if(!this.detail_widget) {
			this.auto_open = true;
			return false;
		}
		this.init_textarea();
		this.detail_widget.open();
	},
	
	fill_data: function() {
		var _this = this;
		this.init_textarea();
		this.noteData(function(note_data) {
			if(!_this.settings.predefined_note_type) {
				this.note_type.val(note_data.NoteTypeId);
				this.note_type.change();
			}
			this.content.find("input[name='is_inactive']").prop('checked', note_data.IsInactive);
			this.content.find("input[name='date_start']").val(note_data.DateStart);
			this.content.find("input[name='date_end']").val(note_data.DateEnd);
			this.image_id = note_data.ImageId;
			this.content.find(".updated_info").text(note_data.UpdatedInfo);
			this.content.find(".created_info").text(note_data.CreatedInfo);
			this.detail_widget.set_title(this.detail_widget.settings.title = "{{writeString=wns.note_of}} "+note_data.DateStart);
			this.note_body.ensureWidget(function(widget) {
				widget.set_data(note_data.NoteBody);
			});
		});
	},
	
	upload_success: function(document_id) {
		this.image_id = document_id;
		this.save(true);
	},
	
	upload_error: function(error) {
	},
	
	save: function(should_remain_open) {
		if(should_remain_open) {
			this.settings.remains_open = true;
		}
		this.detail_widget.settings.save_callback();
		if(should_remain_open) {
			this.settings.remains_open = false;
		}
	},

	init_textarea: function() {
		var _this = this;
		if(!this.note_body.didPrepareWidget()) {
			this.note_body.attr('data-widget-session', this.settings.richtext_session).prepareWidget(function(rich_text_widget) {
				_this.note_body_editor = rich_text_widget;
				jQuery.extend(rich_text_widget.settings, _this.settings.richtext_settings);
			}, jQuery.noop);
		}
	},

	close: function() {
		this.detail_widget.close();
		this.close_callback();
	},
	
	save_callback: jQuery.noop,
	close_callback: jQuery.noop,
	
	settings: {
		initial_type_id: null,
		predefined_note_type_id: null,
		blackboard_note_type_id: null,
		richtext_settings: {
			height: 250,
			width: 550,
			toolbar_Full: [
				['Link','Unlink'],
				['Undo','Redo','-','RemoveFormat'],
				['Source']
			]
		}
	}
};

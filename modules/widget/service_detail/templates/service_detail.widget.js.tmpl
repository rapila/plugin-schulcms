Widget.types.service_detail = {
	initialize: function() {
		var _this = this;
		this._element = Widget.parseHTML("{{includeTemplate=edit}}");
		this._element.find('div.hide_if_not_saved').hide();
		this.service_text = this._element.find('div.service_text');
		this.current_detail_id = null;

		// team members
		this.team_member_container = this._element.find('tbody.team_member_container');
		this.team_member_container.sortable({});
		this.team_member_content = Widget.parseHTML("{{includeTemplate=team_member}}", true, 'tbody');
		this.team_member_content.find('select[name="team_member_id[]"]').prepareWidget();
		var add_new_team_member_button = jQuery('<a/>').addClass('add-new-item add_entry').text(' ');
		add_new_team_member_button.click(function() {
			_this.add_team_member();
		});
		this.team_member_container.parent().after(add_new_team_member_button);
		this.team_member_container.delegate('.delete_team_member', 'click', function(event) {
			jQuery(this).closest('.team_member').remove();
		});

		// service documents and upload
		this.document_prototype = Widget.parseHTML("{{includeTemplate=document}}");
		this.no_documents_placeholder = jQuery('<li/>').html("{{writeString=wns.service.no_document_and_upload_info}}").addClass('no_documents_placeholder');

		this.uploader = Widget.create('file_upload');
		this.droppable_area = _this._element.find('.droppable_area');
		this.droppable_area.sortable({
			update: function(document, ui) {
				var ids = _this.droppable_area.children().map(function() {
					return jQuery(this).data('document_id');
				}).get();
				if(_this.current_detail_id !== null) {
					// only reorder if detail has been saved, otherwise sort order is taken from dom at saving time
					_this.reorderDocuments(ids);
				}
			}
		});

		this.uploader.allow_drag_to(_this.droppable_area, null, function(target, file) {
			return { document_category_id: _this.settings.service_file_category_id, callback: _this.upload_success.bind(_this), error: _this.upload_error.bind(_this)};
		});

		// Logo upload
		var logo_area = _this._element.find('.logo_area');
		logo_area.find('.remove').hide().click(function() {
			_this.service_logo_id = null;
		});

		this.uploader.allow_drag_to(logo_area, null, function(target, file) {
			if(file.type.indexOf('image/') !== 0) {
				Widget.notifyUser('alert', 'Das Logo muss ein Bild sein (Datei vom Typ «PNG», «GIF», «JPG»)');
				return false;
			}

			return {document_kind: 'image', document_id: _this.service_logo_id, document_category_id: _this.settings.service_file_category_id, callback: _this.logo_upload_success.bind(_this), error: _this.upload_error.bind(_this) };
		}, true);

		var service_logo_id = null;
		Object.defineProperty(_this, 'service_logo_id', {
			get: function() {
				return service_logo_id;
			},
			set: function(service_logo) {
				service_logo_id = service_logo;
				var remove_link = logo_area.find('.remove');
				if(service_logo_id === null) {
					logo_area.find('.service_logo').empty();
					remove_link.hide();
				} else {
					remove_link.show();
					Widget.callStatic('document_detail', 'documentPreview', service_logo_id, 50, function(html) {
						logo_area.find('.service_logo').html(html);
					});
				}
			}
		});

		// initial_category_id
		this._element.find("select[name='service_category_id']").prepareWidget(function(service_category) {
			service_category.val(_this.settings.initial_category_id);
		}, jQuery.noop);

		Widget.callStatic('detail', 'create_for_instance', this);

		this.handle('opened', function() {
			this.init_textareas();
			this.accordion = jQuery(this.detail_widget.content.find('div.accordion')).accordion({active: 0, autoHeight: false, clearStyle: true, collapsible:false});
		});
		this.handle('saved', function(event, id) {
			this.setServiceId(id);
			this.current_detail_id = id;
		});
		this.handle('saving', function(event, data) {
			if(this.current_detail_id) {
				data.id = this.current_detail_id;
			}
			data.logo_id = _this.service_logo_id;
			data.body_text = _this.service_text_editor.get_data();
		}.bind(_this));
	},

	fill_data: function() {
		this.detail_widget.disable();
		this.init_textareas();
		this.team_member_container.hide();
		this.serviceData(function(service_data) {
			this.current_detail_id = service_data.Id;
			this.service_logo_id = service_data.LogoId;
			this._element.find("input[name='name']").val(service_data.Name);
			this._element.find("textarea[name='teaser']").val(service_data.Teaser);
			this._element.find("textarea[name='address']").val(service_data.Address);
			this._element.find("textarea[name='opening_hours']").val(service_data.OpeningHours);
			this._element.find("input[name='phone']").val(service_data.Phone);
			this._element.find("input[name='email']").val(service_data.Email);
			this._element.find("input[name='website']").val(service_data.Website);
			this._element.find("input[name='is_active']").prop('checked', service_data.IsActive);
			this._element.find(".updated_info").text(service_data.UpdatedInfo);
			this._element.find(".created_info").text(service_data.CreatedInfo);
			this._element.find(".detail_id").text(service_data.Id);
			this._element.find("textarea[name='body_text']").val(service_data.Body);

			this._element.find('[name="service_category_id"]').ensureWidget(function(service_category_input) {
				service_category_input.val(service_data.ServiceCategoryId);
			});

			this.service_text.ensureWidget(function(widget) {
				widget.set_data(service_data.Body);
			});

			this.update_document_count(service_data.CountDocuments);
			this.update_documents();

			this.list_team_members(service_data.team_members);

			this._element.find('div.hide_if_not_saved').show();
			this.detail_widget.set_title(this.detail_widget.settings.title = "{{writeString=wns.service}} "+service_data.Name);
			this.detail_widget.enable();
		});
	},

	add_team_member: function(id, function_name) {
		var team_member_row = this.team_member_content.clone();
		team_member_row.find('select[name="team_member_id[]"]').prepareWidget(function(team_member_input) {
			if(id) {
				team_member_input.val(id);
			}
		});
		team_member_row.find('input[name="function_name[]"]').val(function_name || '');
		team_member_row.appendTo(this.team_member_container);
	},

	list_team_members: function(team_members) {
		var _this = this;
		this.team_member_container.empty();
		jQuery.each(team_members, function(team_member_id, function_name) {
			_this.add_team_member(team_member_id, function_name);
		});
		this.team_member_container.show();
	},

	init_textareas: function() {
		var _this = this;
		if(!this.service_text.didPrepareWidget()) {
			_this.service_text.attr('data-widget-session', this.settings.richtext_session).prepareWidget(function(rich_text_widget) {
				_this.service_text_editor = rich_text_widget;
				jQuery.extend(rich_text_widget.settings, _this.settings.richtext_settings);
			}, jQuery.noop);
		}
	},

	update_documents: function() {
		var _this = this;
		this.droppable_area.empty();
		this.allDocuments(function(documents) {
			if(documents.length === 0) {
				this.droppable_area.append(_this.no_documents_placeholder);
			}
			jQuery.each(documents, function(i, document_data) {
				_this.insert_document(document_data);
			});
			_this.update_document_count(documents.length);
		});
	},

	update_document_count: function(count) {
		this._element.find("span.documents_count").text(count);
	},

	insert_document: function(document_data) {
		var _this = this;
		var document_id = document_data.Id;
		var document_item = this.document_prototype.clone();
		document_item.data('document_id', document_id);
		this.droppable_area.find('li.no_documents_placeholder').remove();
		this.droppable_area.append(document_item);
		document_item.find('span.delete_doc').click(function(event) {
			var delete_message = AdminInterface.strings.get_string('wns.document.delete_warning', { document_name: document_data.Name});
			Widget.confirm("{{writeString=wns.delete_warning_title}}", delete_message, function(confirmed) {
				if(confirmed) {
					_this.deleteDocument( document_id, function(result) {
						jQuery(document_item).remove();
						if(_this.droppable_area.find('li.preview_edit').length === 0) {
							_this.droppable_area.empty().append(_this.no_documents_placeholder);
						}
					});
				}
			});
			return false;
		});
		var document_name = document_item.find('span.document_name');
		document_name.text(document_data.Name+'.'+document_data.Extension);
		document_name.addClass('pointer '+document_data.Extension).attr('title', '{{writeString=wns.edit_file.dblclick}}').dblclick(function() {
			Widget.create('document_detail', function(detail) {
				detail.settings.is_called_externally = true;
				detail.auto_open = true;
			}, function(detail) {
				detail.setDocumentId(document_id);
				detail.fill_data();
				detail.save_callback = function() {
					_this.update_documents();
				};
			});
		});
		var document_link = document_item.find('a.document_link').attr('href', document_data.DisplayUrl);
		document_link.addClass('pointer').attr('title', '{{writeString=wns.document.download}}');
	},

	upload_success: function(document_id, options) {
		var _this = this;
		this.addServiceDocument(document_id, function() {
			_this.insert_document(_this.getSingleDocument(document_id));
		});
	},

	logo_upload_success: function(logo_id) {
		this.service_logo_id = logo_id;
		this.save(true);
	},

	upload_error: function(error) {
	},

	save: function(should_remain_open) {
		if(should_remain_open) {
			this.settings.remains_open = true;
		}
		this.detail_widget.settings.save_callback();
		if(should_remain_open) {
			this.settings.remains_open = false;
		}
	},

	settings: {
		detail_widget: {
			title: "{{writeString=wns.service.create}}",
			width: 650
		},
		initial_category_id: null,
		richtext_settings: {
			height: 250,
			toolbar_Full: [
				['Bold','Italic','-','Image','BulletedList'],['Link','Unlink'],
				['Undo','Redo','-','RemoveFormat'],
				['Maximize','Format'],['Source']
			]
		}
	}
};

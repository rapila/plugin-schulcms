Widget.types.services_frontend_config = { 
	prepare: function() {
		var _this = this;
		this._element.append(Widget.parseHTML('{{includeTemplate=edit}}'));

		//Elements
		this.mode_dropdown = this._element.find('select[name=display_mode]');
		this.categories_dropdown = this._element.find('select[name=service_category_id\\[\\]]');
		this.services_dropdown = this._element.find('select[name=service_id]');
		this.result_list = this._element.find('ol.ui-editable-items-list');
		this.list_options = this._element.find('div.list_option_only').hide();
		this.detail_options = this._element.find('div.detail_option_only').hide();

		//Mode/Group finish callbacks
		var finish = [];
		
		var config = this.getConfigData() || {};
		
		//Set Modes
		this.displayModes(function(display_modes) {
			this.mode_dropdown.populate(display_modes, config.display_mode);
			this.mode_dropdown.change(this.reload_preview.bind(this));
		}.deferred(finish));

		//Set Categories
		this.serviceCategories(function(service_categories) {
			this.categories_dropdown.populate(service_categories, config.service_category_id);
			this.categories_dropdown.change(this.reload_preview.bind(this));
		}.deferred(finish));
		
		//Set Services
		this.allServices(null, function(services) {
			this.services_dropdown.populate({'': "{{writeString=wns.service_detail.default}}"});
			this.services_dropdown.populate(services, config.service_id);
			this.services_dropdown.change(this.reload_preview.bind(this));
		}.deferred(finish));

		jQuery.when.apply(jQuery, finish).then(function() {
			_this.reload_preview();
		}.bind(this));

		//Init preview stuff
		var detail_widget;
		Widget.create('service_detail', function(widget) {
			_this.detail_widget = widget;
			widget.save_callback = _this.reload_preview.bind(_this);
		});
		this.result_list.delegate('li', 'click', function() {
			var id = jQuery(this).data('id');
			_this.detail_widget.setServiceId(id);
			_this.detail_widget.fill_data();
			_this.detail_widget.open();
		});
	},
	
	reload_preview: function() {
		var result_list = this.result_list;
		result_list.empty();
		if(this.mode_dropdown.val() !== 'service_liste') {
			this.list_options.hide();
			this.detail_options.show();
			return;
		}
		this.list_options.show();
		this.detail_options.hide();
		this.allServices(this.selected_service_categories(), function(services) {
			jQuery.each(services, function(id, name) {
				result_list.append(jQuery('<li/>').text(name).attr('title', "{{writeString=wns.edit_entry}}").addClass('preview_edit').data('id', id));
			});
		});
	},

	selected_service_categories: function() {
		var selected_service_categories = this.categories_dropdown.val();
		return selected_service_categories;
	},
	
	save: function() {
		var service_id = this.mode_dropdown.val() === 'service_liste' ? null : this.services_dropdown.val();
		var data = {
			service_category_id: this.selected_service_categories(),
			display_mode: this.mode_dropdown.val(),
			service_id: service_id
		};
		return data;
	},

	additional_buttons: [
		{
			text: '{{writeString=services.do_admin}}',
			icon: 'wrench',
			action: jQuery.openLink.bind(window, "{{writeLink=services;manager=AdminManager}}")
		}
	]
};

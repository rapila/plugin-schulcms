Widget.types.team_members_frontend_config = {
	prepare: function() {
		var _this = this;
		this._element.append(Widget.parseHTML('{{includeTemplate=edit}}'));

		//Elements
		this.mode_dropdown = this._element.find('select[name=display_mode]');
		this.groups_dropdown = this._element.find('select[name=function_groups\\[\\]]');
		this.result_list = this._element.find('ol.preview');
		this.list_options = this._element.find('div.list_option_only');

		//Mode/Group finish callbacks
		var finish = [];

		var config = this.getConfigData() || {};

		//Set Modes
		this.displayModes(function(display_modes) {
			this.mode_dropdown.populate(display_modes, config.display_mode);
			this.mode_dropdown.change(this.reload_preview.bind(this));
		}.deferred(finish));

		//Set Groups
		var option = jQuery('<option/>');
		this.functionGroups(function(function_groups) {
			jQuery.each(function_groups, function(id, name) {
				option.clone().text(name).attr('value', id).appendTo(_this.groups_dropdown);
			})
			this.groups_dropdown.val(config.function_groups);
			this.groups_dropdown.change(this.reload_preview.bind(this));
		}.deferred(finish));

		jQuery.when.apply(jQuery, finish).then(function() {
			this.reload_preview();
		}.bind(this));

		//Init preview stuff
		var detail_widget;
		Widget.create('team_member_detail', function(widget) {
			_this.detail_widget = widget;
			widget.save_callback = _this.reload_preview.bind(_this);
		});
		this.result_list.delegate('li', 'click', function() {
			var id = jQuery(this).data('id');
			_this.detail_widget.setTeamMemberId(id);
			_this.detail_widget.fill_data();
			_this.detail_widget.open();
		});
	},

	reload_preview: function() {
		var result_list = this.result_list;
		result_list.empty();
		if(this.mode_dropdown.val() === 'team_mitglied_detail'){
			this.list_options.hide();
			return;
		}
		this.list_options.show();
		this.allTeamMembers(this.selected_groups(), function(team_members) {
			jQuery.each(team_members, function(i, team_member) {
				result_list.append(jQuery('<li/>').text(team_member.full_name_inverted).attr('title', "{{writeString=wns.edit_entry}}").addClass('preview_edit').data('id', team_member.id));
			});
		});
	},

	selected_groups: function() {
		var function_groups = this.groups_dropdown.val();
		return function_groups;
	},

	save: function() {
		var data = {
			function_groups: this.selected_groups(),
			display_mode: this.mode_dropdown.val()
		};
		return data;
	},

	additional_buttons: [
		{
			text: '{{writeString=team_members.do_admin}}',
			icon: 'wrench',
			action: jQuery.openLink.bind(window, "{{writeLink=team_members;manager=AdminManager}}")
		}
	]
};